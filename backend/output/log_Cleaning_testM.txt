[START] Nettoyage du fichier: testM
[STEP] Traitement des valeurs manquantes...
[DETECTION] Analyse de 6 colonnes
[DETECTION] Colonne 'id': integer (10/10 valeurs)
[DETECTION] Colonne 'nom': string (9/10 valeurs)
[DETECTION] Colonne 'age': integer (7/10 valeurs)
[DETECTION] Colonne 'email': string (10/10 valeurs)
[DETECTION] Colonne 'salaire': string (8/10 valeurs)
[DETECTION] Colonne 'ville': string (7/10 valeurs)
[DETECTION] Analyse terminée: 10 lignes, 6 colonnes
[SUPPRIMe] Ligne 2 supprimee (valeur manquante non numerique): 1, Jean Dupont, 30, jean.dupont@example.com, , Paris
[REMPLACEMENT] Ligne 4, colonne 'age': valeur manquante 'NA' remplacee par '-9999'
[SUPPRIMe] Ligne 5 supprimee (valeur manquante non numerique): 4, Sophie Durand, 32, sophie.durand@example.com, , Marseille
[SUPPRIMe] Ligne 6 supprimee (valeur manquante non numerique): 5, , 25, awa.ndiaye@example.com, 2400, NA
[SUPPRIMe] Ligne 7 supprimee (valeur manquante non numerique): 6, Moussa Ba, 29, moussa.ba@example.com, NaN, Thies
[SUPPRIMe] Ligne 10 supprimee (valeur manquante non numerique): 10, Inconnu, , unknown@example.com, 2700, NA
[ReSUMe] Colonnes detectees : id[integer], nom[string], age[integer], email[string], salaire[string], ville[string]
[ReSUMe] Nettoyage termine. 1 valeurs problematiques remplacees par -9999 (valeurs manquantes + valeurs non-numeriques dans colonnes numeriques). 5 lignes supprimees (valeurs non-numeriques manquantes).
[STEP] Detection des valeurs aberrantes...
[DETECTION] Analyse de 6 colonnes
[DETECTION] Colonne 'id': integer (4/4 valeurs)
[DETECTION] Colonne 'nom': string (4/4 valeurs)
[DETECTION] Colonne 'age': integer (4/4 valeurs)
[DETECTION] Colonne 'email': string (4/4 valeurs)
[DETECTION] Colonne 'salaire': integer (4/4 valeurs)
[DETECTION] Colonne 'ville': string (4/4 valeurs)
[DETECTION] Analyse terminée: 4 lignes, 6 colonnes
[OUTLIER] Ligne 3, colonne 'age': valeur -9999,00 hors bornes [25,00, 29,00], remplacee par 27
[OutliersCleaner] Nettoyage termine. Colonnes numeriques traitees : id, age, salaire
[STEP] Suppression des doublons...
[DETECTION] Analyse de 6 colonnes
[DETECTION] Colonne 'id': integer (4/4 valeurs)
[DETECTION] Colonne 'nom': string (4/4 valeurs)
[DETECTION] Colonne 'age': integer (4/4 valeurs)
[DETECTION] Colonne 'email': string (4/4 valeurs)
[DETECTION] Colonne 'salaire': integer (4/4 valeurs)
[DETECTION] Colonne 'ville': string (4/4 valeurs)
[DETECTION] Analyse terminée: 4 lignes, 6 colonnes
[DuplicatesCleaner] 0 lignes strictement identiques supprimees
[STEP] Normalisation des donnees...
[DETECTION] Analyse de 6 colonnes
[DETECTION] Colonne 'id': integer (4/4 valeurs)
[DETECTION] Colonne 'nom': string (4/4 valeurs)
[DETECTION] Colonne 'age': integer (4/4 valeurs)
[DETECTION] Colonne 'email': string (4/4 valeurs)
[DETECTION] Colonne 'salaire': integer (4/4 valeurs)
[DETECTION] Colonne 'ville': string (4/4 valeurs)
[DETECTION] Analyse terminée: 4 lignes, 6 colonnes
[NORMALIZED] Colonne 'nom': "Marie Curie" → "marie curie"
[NORMALIZED] Colonne 'ville': "Lyon" → "lyon"
[NORMALIZED] Colonne 'nom': "Ali Ndiaye" → "ali ndiaye"
[NORMALIZED] Colonne 'ville': "Dakar" → "dakar"
[NORMALIZED] Colonne 'nom': "Khadija Fall" → "khadija fall"
[NORMALIZED] Colonne 'ville': "Dakar" → "dakar"
[NORMALIZED] Colonne 'nom': "Fatou Diop" → "fatou diop"
[NORMALIZED] Colonne 'ville': "Lyon" → "lyon"
[Normalizer] 8 champs string normalisés (colonnes : nom, email, ville)
[END] Nettoyage termine avec succès.
